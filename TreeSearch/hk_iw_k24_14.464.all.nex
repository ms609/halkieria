#NEXUS
[R-package APE, Tue Oct 01 19:17:49 2019]

BEGIN TAXA;
	DIMENSIONS NTAX = 51;
	TAXLABELS
		Yilingia_spiciformis
		Namacalathus
		Novocrania
		Lingula
		Pelagodiscus_atlanticus
		Terebratulina
		Phoronis
		Sipunculus
		Loxosomella
		Flustra
		Amathia
		Canadia_spinosa
		Serpula
		Capitella
		Wirenia
		Chaetoderma
		Acaenoplax_hayae
		Kulindroplax_perissokomos
		Phthipodochiton_thraivensis
		Calvapilosa_kroegeri
		Glaphurochiton_carbonarius
		Polysacos_vickersianum
		Mopalia
		Tonicella
		Leptochiton
		Neopilina
		Conocardium_elongatum
		Dentalium
		Pojetaia_runnegari
		Mytilus
		Pelagiella
		Haliotis
		Odontogriphus_omalus
		Wiwaxia_corrugata
		Siphogonuchites_multa
		Orthrozanclus
		Halkieria_evangelista
		Dailyatia
		Micromitra
		Eccentrotheca
		Gasconsia
		Heliomedusa_orienta
		Lingulellotreta_malongensis
		Micrina
		Mickwitzia_muralensis
		Orthis
		Paterimitra
		Yuganotheca_elegans
		Cotyledion_tylodes
		Haplophrentis_carinatus
		Pedunculotheca_diania
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Yilingia_spiciformis,
		2	Namacalathus,
		3	Novocrania,
		4	Lingula,
		5	Pelagodiscus_atlanticus,
		6	Terebratulina,
		7	Phoronis,
		8	Sipunculus,
		9	Loxosomella,
		10	Flustra,
		11	Amathia,
		12	Canadia_spinosa,
		13	Serpula,
		14	Capitella,
		15	Wirenia,
		16	Chaetoderma,
		17	Acaenoplax_hayae,
		18	Kulindroplax_perissokomos,
		19	Phthipodochiton_thraivensis,
		20	Calvapilosa_kroegeri,
		21	Glaphurochiton_carbonarius,
		22	Polysacos_vickersianum,
		23	Mopalia,
		24	Tonicella,
		25	Leptochiton,
		26	Neopilina,
		27	Conocardium_elongatum,
		28	Dentalium,
		29	Pojetaia_runnegari,
		30	Mytilus,
		31	Pelagiella,
		32	Haliotis,
		33	Odontogriphus_omalus,
		34	Wiwaxia_corrugata,
		35	Siphogonuchites_multa,
		36	Orthrozanclus,
		37	Halkieria_evangelista,
		38	Dailyatia,
		39	Micromitra,
		40	Eccentrotheca,
		41	Gasconsia,
		42	Heliomedusa_orienta,
		43	Lingulellotreta_malongensis,
		44	Micrina,
		45	Mickwitzia_muralensis,
		46	Orthis,
		47	Paterimitra,
		48	Yuganotheca_elegans,
		49	Cotyledion_tylodes,
		50	Haplophrentis_carinatus,
		51	Pedunculotheca_diania
	;
	TREE * UNTITLED = [&R] (1,(38,(((49,40),(((50,51),(47,(44,(((41,39),((46,6),(3,(5,(4,(48,43)))))),(42,45))))),(37,36))),(7,(2,((10,11),(9,((8,(12,(14,13))),(15,(16,(18,(19,(17,((35,((31,((32,(26,27)),(28,(30,29)))),(33,34))),(20,(21,(25,(22,(23,24)))))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(40,(((51,50),(47,(44,((45,42),((39,41),((6,46),(3,(5,(4,(43,48)))))))))),(36,37)))),(2,(7,((11,10),(9,((8,(12,(13,14))),(15,(16,(18,(19,(17,(35,((20,(21,(25,(22,(24,23))))),((31,((32,(27,26)),(28,(29,30)))),(34,33)))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,(((49,40),(((51,50),(47,(44,(((39,41),((6,46),(3,(5,(43,(4,48)))))),(45,42))))),(36,37))),(2,(7,((11,10),(9,((8,(12,(13,14))),(15,(16,(18,(19,(17,((35,(20,(21,(25,(22,(24,23)))))),((31,((32,(27,26)),(28,(29,30)))),(34,33))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(2,(7,((10,11),(9,((8,(12,(13,14))),(15,(16,(18,(19,(17,(35,((((31,(32,(27,26))),(28,(29,30))),(34,33)),(20,(21,(25,(22,(24,23)))))))))))))))))),(40,(((51,50),(47,(44,((42,45),((39,41),((6,46),(3,(5,(4,(48,43)))))))))),(36,37))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(7,(2,((9,((8,(12,(13,14))),(15,(16,(18,(19,(35,(17,((20,(21,(25,(22,(23,24))))),((31,((32,(26,27)),(28,(30,29)))),(33,34))))))))))),(10,11))))),(40,(((50,51),(47,(44,(((41,39),((46,6),(3,(5,(43,(4,48)))))),(42,45))))),(36,37))))));
	TREE * UNTITLED = [&R] (1,(38,((40,(49,(((47,(44,((42,45),(((46,6),(3,(5,(4,(43,48))))),(41,39))))),(50,51)),(37,36)))),(7,(2,((10,11),(9,((8,(12,(14,13))),(15,(16,(18,(19,(17,((35,(20,(21,(25,(22,(23,24)))))),((31,((32,(26,27)),(28,(30,29)))),(33,34))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,(((40,49),(((47,(44,(((39,41),((6,46),(3,(5,(43,(4,48)))))),(45,42)))),(51,50)),(36,37))),(2,(7,((11,10),(9,((8,(12,(13,14))),(15,(16,(18,(19,(17,(35,((((31,(32,(27,26))),(28,(29,30))),(34,33)),(20,(21,(25,(22,(24,23))))))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(40,(((50,51),(47,(44,(((41,39),((46,6),(3,(5,(4,(48,43)))))),(42,45))))),(36,37)))),((7,2),((10,11),(9,((8,(12,(14,13))),(15,(16,(18,(19,(17,((35,(20,(21,(25,(22,(23,24)))))),((33,34),(31,((32,(26,27)),(28,(30,29))))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,((40,(49,((36,37),((47,(44,((((6,46),(3,(5,(4,(43,48))))),(39,41)),(42,45)))),(51,50))))),((2,7),((11,10),(9,((8,(12,(13,14))),(15,(16,(18,(19,(17,((35,(((31,(32,(27,26))),(28,(29,30))),(34,33))),(20,(21,(25,(22,(24,23))))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,((49,((2,7),((10,11),(9,((8,(12,(14,13))),(15,(16,(18,(19,(17,((35,(20,(21,(25,(22,(23,24)))))),((31,((32,(27,26)),(28,(30,29)))),(33,34))))))))))))),(40,(((50,51),(47,(44,(((41,39),((46,6),(3,(5,(4,(48,43)))))),(45,42))))),(37,36))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(40,((36,37),((51,50),(47,(44,((45,42),((39,41),((6,46),(3,(5,(4,(48,43))))))))))))),(2,(7,((9,((8,(12,(13,14))),(15,(16,(18,(19,(35,(17,((((31,(32,(27,26))),(28,(29,30))),(34,33)),(20,(21,(25,(22,(24,23)))))))))))))),(11,10)))))));
	TREE * UNTITLED = [&R] (1,(38,(49,((2,(7,((11,10),(9,((8,(12,(13,14))),(15,(16,(18,(19,(17,((35,(((31,(32,(27,26))),(28,(29,30))),(34,33))),(20,(21,(25,(22,(24,23)))))))))))))))),(40,(((51,50),(47,(44,(((39,41),((6,46),(3,(5,(43,(4,48)))))),(45,42))))),(36,37)))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(2,(7,((10,11),(9,((15,(16,(18,(19,(17,(35,((20,(21,(25,(22,(23,24))))),(((31,(32,(26,27))),(28,(29,30))),(33,34))))))))),(8,(12,(14,13))))))))),(40,(((50,51),(47,(44,(((41,39),((3,(5,(4,(43,48)))),(46,6))),(42,45))))),(37,36))))));
	TREE * UNTITLED = [&R] (1,(38,((40,(49,((36,37),((47,(44,((45,42),((39,41),((6,46),(3,(5,(43,(4,48))))))))),(51,50))))),(7,(2,((11,10),(9,((8,(12,(13,14))),(15,(16,(18,(19,((35,17),((20,(21,(25,(22,(24,23))))),(((31,(32,(27,26))),(28,(29,30))),(34,33))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,(49,((40,(((50,51),(47,(44,(((41,39),((3,(5,(43,(48,4)))),(46,6))),(42,45))))),(37,36))),((2,7),((11,10),(9,((8,(12,(14,13))),(15,(16,(18,(19,(17,((35,((31,((32,(26,27)),(28,(29,30)))),(33,34))),(20,(21,(25,(22,(23,24)))))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(2,(7,((10,11),(9,((8,(12,(14,13))),(15,(16,(18,(19,(17,((35,(((31,(32,(26,27))),(28,(30,29))),(33,34))),(20,(21,(25,(22,(23,24))))))))))))))))),(40,(((47,(44,((45,42),(((46,6),(3,(5,(43,(48,4))))),(41,39))))),(50,51)),(37,36))))));
	TREE * UNTITLED = [&R] (1,(38,((40,(49,(((47,(44,(((41,39),((46,6),(3,(5,(43,(48,4)))))),(42,45)))),(50,51)),(37,36)))),((7,2),((10,11),(9,((8,(12,(14,13))),(15,(16,(18,(19,(35,(17,((20,(21,(25,(22,(23,24))))),((31,((32,(26,27)),(28,(30,29)))),(33,34))))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(40,(((47,(44,(((39,41),((6,46),(3,(5,(43,(4,48)))))),(45,42)))),(51,50)),(36,37)))),((2,7),((11,10),(9,((15,(16,(18,(19,(17,(35,(((31,((32,(27,26)),(28,(29,30)))),(34,33)),(20,(21,(25,(22,(24,23)))))))))))),(8,(12,(13,14))))))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(40,(((50,51),(47,(44,((((3,(5,(43,(4,48)))),(46,6)),(41,39)),(42,45))))),(37,36)))),(2,(7,((10,11),(9,((15,(16,(18,(19,(17,(35,((20,(21,(25,(22,(23,24))))),((31,((32,(27,26)),(28,(30,29)))),(33,34))))))))),(8,(12,(14,13)))))))))));
	TREE * UNTITLED = [&R] (1,(38,((49,(40,(((51,50),(47,(44,(((39,41),((6,46),(3,(5,(4,(43,48)))))),(45,42))))),(36,37)))),(2,(7,((10,11),(9,((8,(12,(13,14))),(15,(16,(18,(19,(35,(17,((20,(21,(25,(22,(24,23))))),(((31,(32,(27,26))),(28,(29,30))),(34,33)))))))))))))))));
END;
