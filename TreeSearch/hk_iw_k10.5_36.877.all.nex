#NEXUS
[R-package APE, Fri Sep 27 20:03:42 2019]

BEGIN TAXA;
	DIMENSIONS NTAX = 73;
	TAXLABELS
		Yilingia_spiciformis
		Namacalathus
		Novocrania
		Lingula
		Pelagodiscus_atlanticus
		Terebratulina
		Phoronis
		Sipunculus
		Loxosomella
		Flustra
		Amathia
		Canadia_spinosa
		Serpula
		Capitella
		Wirenia
		Chaetoderma
		Acaenoplax_hayae
		Kulindroplax_perissokomos
		Phthipodochiton_thraivensis
		Calvapilosa_kroegeri
		Glaphurochiton_carbonarius
		Polysacos_vickersianum
		Mopalia
		Tonicella
		Leptochiton
		Neopilina
		Conocardium_elongatum
		Dentalium
		Pojetaia_runnegari
		Mytilus
		Pelagiella
		Haliotis
		Odontogriphus_omalus
		Wiwaxia_corrugata
		Siphogonuchites_multa
		Orthrozanclus
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Micromitra
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Gasconsia
		Glyptoria
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Salanygolina
		Siphonobolus_priscus
		Tomteluva_perturbata
		Ussunia
		Yuganotheca_elegans
		Bactrotheca
		Cotyledion_tylodes
		Cupitheca_holocyclata
		Haplophrentis_carinatus
		Paramicrocornus
		Pedunculotheca_diania
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Yilingia_spiciformis,
		2	Namacalathus,
		3	Novocrania,
		4	Lingula,
		5	Pelagodiscus_atlanticus,
		6	Terebratulina,
		7	Phoronis,
		8	Sipunculus,
		9	Loxosomella,
		10	Flustra,
		11	Amathia,
		12	Canadia_spinosa,
		13	Serpula,
		14	Capitella,
		15	Wirenia,
		16	Chaetoderma,
		17	Acaenoplax_hayae,
		18	Kulindroplax_perissokomos,
		19	Phthipodochiton_thraivensis,
		20	Calvapilosa_kroegeri,
		21	Glaphurochiton_carbonarius,
		22	Polysacos_vickersianum,
		23	Mopalia,
		24	Tonicella,
		25	Leptochiton,
		26	Neopilina,
		27	Conocardium_elongatum,
		28	Dentalium,
		29	Pojetaia_runnegari,
		30	Mytilus,
		31	Pelagiella,
		32	Haliotis,
		33	Odontogriphus_omalus,
		34	Wiwaxia_corrugata,
		35	Siphogonuchites_multa,
		36	Orthrozanclus,
		37	Halkieria_evangelista,
		38	Dailyatia,
		39	Acanthotretella_spinosa,
		40	Alisina,
		41	Askepasma_toddense,
		42	Micromitra,
		43	Antigonambonites_planus,
		44	Botsfordia,
		45	Clupeafumosus_socialis,
		46	Coolinia_pecten,
		47	Craniops,
		48	Eccentrotheca,
		49	Eoobolus,
		50	Gasconsia,
		51	Glyptoria,
		52	Heliomedusa_orienta,
		53	Kutorgina_chengjiangensis,
		54	Lingulosacculus,
		55	Lingulellotreta_malongensis,
		56	Longtancunella_chengjiangensis,
		57	Micrina,
		58	Mickwitzia_muralensis,
		59	Mummpikia_nuda,
		60	Nisusia_sulcata,
		61	Orthis,
		62	Paterimitra,
		63	Salanygolina,
		64	Siphonobolus_priscus,
		65	Tomteluva_perturbata,
		66	Ussunia,
		67	Yuganotheca_elegans,
		68	Bactrotheca,
		69	Cotyledion_tylodes,
		70	Cupitheca_holocyclata,
		71	Haplophrentis_carinatus,
		72	Paramicrocornus,
		73	Pedunculotheca_diania
	;
	TREE * UNTITLED = [&R] (1,((38,(36,(37,(62,((68,((73,70),(71,72))),(57,((58,52),(((50,(66,(47,3))),(4,(49,(44,((55,(45,(54,(64,39)))),(59,5)))))),((41,42),((53,(60,(51,(56,(40,(61,6)))))),((63,(67,65)),(43,46)))))))))))),(48,(69,(7,(2,((9,((8,(12,(14,13))),(((33,34),(35,((20,(21,(25,(22,(23,24))))),(17,((19,15),(16,18)))))),(31,(28,(32,(26,(27,(29,30))))))))),(10,11))))))));
	TREE * UNTITLED = [&R] (1,((38,(48,(69,((7,2),((9,((((33,34),(((17,35),((15,19),(16,18))),(20,(21,(25,(22,(23,24))))))),(31,(28,(32,(26,(27,(29,30))))))),(8,(12,(14,13))))),(10,11)))))),(36,(37,(62,((68,((73,70),(71,72))),(57,((58,52),(((41,42),((53,(60,(51,(56,(40,(61,6)))))),((63,(67,65)),(43,46)))),((50,(66,(47,3))),(4,(49,(44,((55,(45,(54,(64,39)))),(59,5)))))))))))))));
	TREE * UNTITLED = [&R] (1,(38,(((48,69),(7,(2,((9,((8,(12,(13,14))),(((34,33),(35,((17,((15,19),(18,16))),(20,(21,(25,(22,(24,23)))))))),(31,(28,(32,(26,(27,(30,29))))))))),(11,10))))),(36,(37,(62,((57,((52,58),(((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((45,54),(39,64)))))))),((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43))))))),(68,((70,73),(72,71))))))))));
	TREE * UNTITLED = [&R] (1,((38,(36,(37,(62,((68,((70,73),(71,72))),(57,((58,52),(((50,(66,(47,3))),(4,(49,(44,((55,((54,45),(64,39))),(59,5)))))),((41,42),(((43,46),(63,(67,65))),(53,(60,(51,(56,(40,(61,6)))))))))))))))),(69,(48,(7,(2,((10,11),(9,((8,(12,(14,13))),(((33,34),((17,(35,((19,15),(18,16)))),(20,(21,(25,(22,(23,24))))))),(31,(28,(32,(26,(27,(29,30))))))))))))))));
	TREE * UNTITLED = [&R] (1,((38,(36,(37,(62,((68,((73,70),(71,72))),(57,((58,52),(((50,(66,(47,3))),(4,(49,(44,((5,59),(55,(45,(54,(64,39))))))))),((42,41),((53,(60,(51,(56,(40,(61,6)))))),((63,(67,65)),(43,46)))))))))))),((48,69),(7,(2,((9,((8,(12,(14,13))),(((33,34),((35,(20,(21,(25,(22,(23,24)))))),(17,((19,15),(16,18))))),(31,(28,(32,(26,(27,(29,30))))))))),(10,11)))))));
	TREE * UNTITLED = [&R] (1,((38,(69,(48,(2,(7,((9,((8,(12,(13,14))),(((34,33),(35,((20,(21,(25,(22,(24,23))))),(17,((19,15),(16,18)))))),(31,(28,(32,(26,(27,(30,29))))))))),(11,10))))))),(36,(37,(62,((68,((70,73),(72,71))),(57,((52,58),(((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(39,64))))))))),((41,42),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43)))))))))))));
	TREE * UNTITLED = [&R] (1,(38,((36,(37,(62,((68,((70,73),(71,72))),(57,((58,52),(((50,(66,(47,3))),(4,(49,(44,((59,5),(55,(45,(54,(64,39))))))))),((41,42),((53,(60,(51,(56,(40,(61,6)))))),((63,(65,67)),(43,46))))))))))),((48,69),(7,(2,((9,((((33,34),((17,(35,((19,15),(16,18)))),(20,(21,(25,(22,(23,24))))))),(31,(28,(32,(26,(27,(29,30))))))),(8,(12,(14,13))))),(10,11))))))));
	TREE * UNTITLED = [&R] (1,((38,((48,69),(2,(7,((9,((((33,34),((17,(35,((15,19),(18,16)))),(20,(21,(25,(22,(23,24))))))),(31,(28,(32,(26,(27,(29,30))))))),(8,(12,(14,13))))),(10,11)))))),(36,(37,(62,((57,((58,52),(((50,(66,(47,3))),(4,(49,(44,((55,(45,(54,(64,39)))),(59,5)))))),((41,42),((53,(60,(51,(56,(40,(61,6)))))),((63,(67,65)),(43,46))))))),(68,((70,73),(71,72)))))))));
	TREE * UNTITLED = [&R] (1,(38,(((69,48),(2,(7,((9,((8,(12,(13,14))),(((34,33),(((35,17),((15,19),(18,16))),(20,(21,(25,(22,(24,23))))))),(31,(28,(32,(26,(27,(30,29))))))))),(11,10))))),(36,(37,(62,((57,((52,58),(((50,(66,(3,47))),(4,(49,(44,((59,5),(55,((45,54),(39,64)))))))),((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43))))))),(68,((70,73),(72,71))))))))));
	TREE * UNTITLED = [&R] (1,(38,(((48,69),(7,(2,((9,((8,(12,(14,13))),(((33,34),((17,(35,((19,15),(16,18)))),(20,(21,(25,(22,(23,24))))))),(31,(28,(32,(26,(27,(29,30))))))))),(10,11))))),(36,(37,(62,((68,((71,72),(73,70))),(57,((58,52),(((50,(66,(47,3))),(4,(49,(44,((5,59),(55,(54,(45,(64,39))))))))),((42,41),(((43,46),(63,(67,65))),(53,(60,(51,(56,(40,(61,6))))))))))))))))));
	TREE * UNTITLED = [&R] (1,((38,(36,(37,(62,((68,((73,70),(71,72))),(57,((52,58),(((((43,46),(63,(67,65))),(53,(60,(51,(56,(40,(61,6))))))),(41,42)),((50,(66,(47,3))),(4,(49,(44,((55,((45,54),(64,39))),(59,5)))))))))))))),(69,(48,(2,(7,((9,((((34,33),((35,(20,(21,(25,(22,(23,24)))))),(17,((16,18),(19,15))))),(31,(28,(32,(26,(27,(29,30))))))),(8,(12,(14,13))))),(10,11))))))));
	TREE * UNTITLED = [&R] (1,(38,((36,(37,(62,((68,((73,70),(71,72))),(57,((58,52),(((50,(66,(47,3))),(4,(49,(44,((55,(54,(45,(64,39)))),(59,5)))))),((41,42),(((63,(65,67)),(43,46)),(53,(60,(51,(56,(40,(61,6))))))))))))))),((48,69),(7,(2,((9,((8,(12,(14,13))),((((35,(20,(21,(25,(22,(23,24)))))),(17,((19,15),(16,18)))),(33,34)),(31,(28,(32,(26,(27,(30,29))))))))),(10,11))))))));
	TREE * UNTITLED = [&R] (1,(38,((36,(37,(62,((68,((73,70),(72,71))),(57,((52,58),(((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(39,64))))))))),((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43))))))))))),(69,(48,((2,7),((9,((8,(12,(13,14))),((((35,(20,(21,(25,(22,(24,23)))))),(17,((15,19),(18,16)))),(34,33)),(31,(28,(32,(26,(27,(30,29))))))))),(11,10))))))));
	TREE * UNTITLED = [&R] (1,(38,((48,(69,((2,7),((9,((8,(12,(13,14))),(((34,33),(35,((17,((15,19),(18,16))),(20,(21,(25,(22,(24,23)))))))),(31,(28,(32,(26,(27,(30,29))))))))),(11,10))))),(36,(37,(62,((68,((70,73),(72,71))),(57,((52,58),(((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(54,(45,(39,64)))))))))))))))))));
	TREE * UNTITLED = [&R] (1,((38,(48,(69,(2,(7,((9,((8,(12,(13,14))),(((34,33),((35,(17,((15,19),(18,16)))),(20,(21,(25,(22,(24,23))))))),(31,(28,(32,(26,(27,(30,29))))))))),(11,10))))))),(36,(37,(62,((68,((72,71),(70,73))),(57,((52,58),(((50,(66,(3,47))),(4,(49,(44,((59,5),(55,((45,54),(64,39)))))))),((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43)))))))))))));
	TREE * UNTITLED = [&R] (1,((38,(36,(37,(62,((57,((((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43)))),((50,(66,(3,47))),(4,(49,(44,((55,(45,(54,(39,64)))),(5,59))))))),(52,58))),(68,((72,71),(70,73)))))))),(69,(48,(7,(2,((9,((((34,33),(35,((20,(21,(25,(22,(24,23))))),(17,((16,18),(15,19)))))),(31,(28,(32,(26,(27,(30,29))))))),(8,(12,(13,14))))),(11,10))))))));
	TREE * UNTITLED = [&R] (1,((38,(36,(37,(62,((68,((70,73),(71,72))),(57,((52,58),(((50,(66,(3,47))),(4,(49,(44,((59,5),(55,((54,45),(39,64)))))))),((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43)))))))))))),(48,(69,((2,7),((9,((8,(12,(13,14))),((31,(28,(32,(26,(27,(29,30)))))),((34,33),((35,(17,((15,19),(18,16)))),(20,(21,(25,(22,(23,24)))))))))),(11,10)))))));
	TREE * UNTITLED = [&R] (1,(38,((36,(37,(62,((57,((52,58),(((50,(66,(3,47))),(4,(49,(44,((55,(54,(45,(39,64)))),(5,59)))))),((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43))))))),(68,((73,70),(72,71))))))),(48,(69,(7,(2,((9,((8,(12,(13,14))),(((34,33),((35,(17,((15,19),(18,16)))),(20,(21,(25,(22,(24,23))))))),(31,(28,(32,(26,(27,(30,29))))))))),(11,10)))))))));
	TREE * UNTITLED = [&R] (1,((38,(69,(48,(2,(7,((9,((8,(12,(14,13))),(((33,34),((35,(17,((19,15),(16,18)))),(20,(21,(25,(22,(23,24))))))),(31,(28,(32,(26,(27,(30,29))))))))),(10,11))))))),(36,(37,(62,((57,((52,58),(((50,(66,(47,3))),(4,(49,(44,((55,((45,54),(64,39))),(59,5)))))),((((63,(67,65)),(43,46)),(53,(60,(51,(56,(40,(61,6))))))),(41,42))))),(68,((73,70),(71,72)))))))));
	TREE * UNTITLED = [&R] (1,((38,(36,(37,(62,((57,((52,58),(((50,(66,(3,47))),(4,(49,(44,((55,((54,45),(39,64))),(5,59)))))),((42,41),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43))))))),(68,((72,71),(70,73)))))))),((48,69),(7,(2,((9,((8,(12,(13,14))),(((34,33),((35,(20,(21,(25,(22,(24,23)))))),(17,((15,19),(16,18))))),(31,(28,(32,(26,(27,(30,29))))))))),(11,10)))))));
	TREE * UNTITLED = [&R] (1,(38,((36,(37,(62,((68,((73,70),(71,72))),(57,((58,52),(((50,(66,(47,3))),(4,(49,(44,((59,5),(55,(54,(45,(64,39))))))))),((41,42),(((43,46),(63,(67,65))),(53,(60,(51,(56,(40,(61,6))))))))))))))),(69,(48,(7,(2,((9,((8,(12,(14,13))),(((33,34),((17,(35,((19,15),(16,18)))),(20,(21,(25,(22,(23,24))))))),(31,(28,(32,(26,(27,(29,30))))))))),(10,11)))))))));
	TREE * UNTITLED = [&R] (1,(38,((48,(69,(7,(2,((9,((8,(12,(13,14))),((((35,(17,((15,19),(18,16)))),(20,(21,(25,(22,(24,23)))))),(34,33)),(31,(28,(32,(26,(27,(29,30))))))))),(11,10)))))),(36,(37,(62,((68,((73,70),(72,71))),(57,((58,52),(((50,(66,(3,47))),(4,(49,(44,((55,(54,(45,(39,64)))),(5,59)))))),((41,42),((53,(60,(51,(56,(40,(6,61)))))),((63,(65,67)),(46,43))))))))))))));
END;
