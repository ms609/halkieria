#NEXUS
[R-package APE, Wed Sep 18 14:57:12 2019]

BEGIN TAXA;
	DIMENSIONS NTAX = 73;
	TAXLABELS
		Yilingia_spiciformis
		Namacalathus
		Novocrania
		Lingula
		Pelagodiscus_atlanticus
		Terebratulina
		Phoronis
		Sipunculus
		Loxosomella
		Flustra
		Amathia
		Canadia_spinosa
		Serpula
		Capitella
		Wirenia
		Chaetoderma
		Acaenoplax_hayae
		Kulindroplax_perissokomos
		Phthipodochiton_thraivensis
		Calvapilosa_kroegeri
		Glaphurochiton_carbonarius
		Polysacos_vickersianum
		Mopalia
		Tonicella
		Leptochiton
		Neopilina
		Conocardium_elongatum
		Dentalium
		Pojetaia_runnegari
		Mytilus
		Pelagiella
		Haliotis
		Odontogriphus_omalus
		Wiwaxia_corrugata
		Siphogonuchites_multa
		Orthrozanclus
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Micromitra
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Gasconsia
		Glyptoria
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Salanygolina
		Siphonobolus_priscus
		Tomteluva_perturbata
		Ussunia
		Yuganotheca_elegans
		Bactrotheca
		Cotyledion_tylodes
		Cupitheca_holocyclata
		Haplophrentis_carinatus
		Paramicrocornus
		Pedunculotheca_diania
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Yilingia_spiciformis,
		2	Namacalathus,
		3	Novocrania,
		4	Lingula,
		5	Pelagodiscus_atlanticus,
		6	Terebratulina,
		7	Phoronis,
		8	Sipunculus,
		9	Loxosomella,
		10	Flustra,
		11	Amathia,
		12	Canadia_spinosa,
		13	Serpula,
		14	Capitella,
		15	Wirenia,
		16	Chaetoderma,
		17	Acaenoplax_hayae,
		18	Kulindroplax_perissokomos,
		19	Phthipodochiton_thraivensis,
		20	Calvapilosa_kroegeri,
		21	Glaphurochiton_carbonarius,
		22	Polysacos_vickersianum,
		23	Mopalia,
		24	Tonicella,
		25	Leptochiton,
		26	Neopilina,
		27	Conocardium_elongatum,
		28	Dentalium,
		29	Pojetaia_runnegari,
		30	Mytilus,
		31	Pelagiella,
		32	Haliotis,
		33	Odontogriphus_omalus,
		34	Wiwaxia_corrugata,
		35	Siphogonuchites_multa,
		36	Orthrozanclus,
		37	Halkieria_evangelista,
		38	Dailyatia,
		39	Acanthotretella_spinosa,
		40	Alisina,
		41	Askepasma_toddense,
		42	Micromitra,
		43	Antigonambonites_planus,
		44	Botsfordia,
		45	Clupeafumosus_socialis,
		46	Coolinia_pecten,
		47	Craniops,
		48	Eccentrotheca,
		49	Eoobolus,
		50	Gasconsia,
		51	Glyptoria,
		52	Heliomedusa_orienta,
		53	Kutorgina_chengjiangensis,
		54	Lingulosacculus,
		55	Lingulellotreta_malongensis,
		56	Longtancunella_chengjiangensis,
		57	Micrina,
		58	Mickwitzia_muralensis,
		59	Mummpikia_nuda,
		60	Nisusia_sulcata,
		61	Orthis,
		62	Paterimitra,
		63	Salanygolina,
		64	Siphonobolus_priscus,
		65	Tomteluva_perturbata,
		66	Ussunia,
		67	Yuganotheca_elegans,
		68	Bactrotheca,
		69	Cotyledion_tylodes,
		70	Cupitheca_holocyclata,
		71	Haplophrentis_carinatus,
		72	Paramicrocornus,
		73	Pedunculotheca_diania
	;
	TREE * UNTITLED = [&R] (9,((7,(2,((69,48),((38,1),(36,(37,((71,72),((70,(68,((31,(8,(12,(14,13)))),((28,(29,(30,(32,(26,27))))),((35,(((16,15),(17,(19,18))),(22,(20,(21,(25,(23,24))))))),(33,34)))))),(73,(62,(57,((52,58),(((42,41),((63,(56,(67,65))),((43,46),((60,53),(51,(40,(6,61))))))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(64,39)))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,((69,48),((38,1),(36,(37,((71,72),((70,(68,(((31,(28,((30,29),(26,(32,27))))),((35,(((17,(18,19)),(15,16)),(22,((20,21),(25,(24,23)))))),(34,33))),(8,(13,(12,14)))))),(73,(62,(57,((58,52),(((41,42),((63,(56,(65,67))),((53,(60,(51,(40,(61,6))))),(46,43)))),((50,(66,(47,3))),(4,(49,(44,((59,5),(55,(45,(54,(39,64)))))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,(1,(38,(36,(37,(71,(72,((70,(68,((31,((28,((29,30),(32,(27,26)))),((33,34),(35,(((15,16),(17,(18,19))),(22,((21,20),(25,(24,23))))))))),(8,(13,(12,14)))))),(73,(62,(57,((58,52),(((41,42),(63,(67,(65,(((53,60),(51,(56,(40,(61,6))))),(46,43)))))),((50,(66,(47,3))),(4,(49,(44,((59,5),(55,((54,45),(39,64)))))))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,(69,(48,(1,(38,(36,(37,((72,71),((70,(68,(((31,(28,((30,29),(32,(27,26))))),((35,((22,(20,(25,(21,(24,23))))),((17,(18,19)),(15,16)))),(34,33))),(8,(13,(12,14)))))),(73,(62,(57,((52,58),(((41,42),(63,((56,(((60,53),(51,(40,(61,6)))),(46,43))),(65,67)))),((50,(66,(47,3))),(4,(49,(44,((55,((45,54),(39,64))),(59,5))))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,((48,69),(38,(1,(36,(37,((72,71),((70,(68,(((31,(28,((30,29),(27,(32,26))))),((35,(((16,15),(17,(19,18))),(22,(20,(25,(21,(23,24))))))),(33,34))),(8,(12,(13,14)))))),(73,(62,(57,((((42,41),(63,(67,(65,((53,(60,(51,(56,(40,(6,61)))))),(43,46)))))),((50,(66,(3,47))),(4,(49,(44,((55,(54,(45,(64,39)))),(5,59))))))),(52,58)))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,(1,(38,(36,(37,((71,72),((70,(68,((31,(8,(13,(14,12)))),((28,(30,(32,(29,(27,26))))),((35,(((16,15),(17,(19,18))),(22,((25,(23,24)),(20,21))))),(33,34)))))),(73,(62,(57,((52,58),(((42,41),((63,(56,(67,65))),(((51,(40,(6,61))),(53,60)),(43,46)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(64,39)))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((2,(7,((69,48),(38,(1,(36,(37,((71,72),((70,(68,((31,(8,(13,(12,14)))),(((35,(((15,16),(17,(18,19))),(22,(20,(25,(21,(24,23))))))),(34,33)),(28,(29,(30,(32,(26,27))))))))),(73,(62,(57,((58,52),(((41,42),((((46,43),((61,51),(40,6))),(53,60)),(63,(56,(65,67))))),((50,(66,(47,3))),(4,(49,(44,((59,5),(55,((54,45),(39,64)))))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,(((2,7),((48,69),(38,(1,(36,(37,((71,72),((70,(68,((31,(((35,((22,(20,(21,(25,(23,24))))),((16,15),(17,(18,19))))),(33,34)),(28,(29,(30,(27,(26,32))))))),(8,(12,(14,13)))))),(73,(62,(57,((52,58),(((50,(66,(47,3))),(4,(49,(44,((5,59),(55,(54,(45,(64,39))))))))),((63,((65,67),((43,46),(53,(60,(51,(56,(40,(6,61))))))))),(42,41))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,(1,(38,(36,(37,(71,(72,((70,(68,((8,(13,(14,12))),((31,(28,(29,(30,(26,(32,27)))))),((35,((22,((25,(21,20)),(23,24))),((16,15),(17,(19,18))))),(33,34)))))),(73,(62,(57,((52,58),(((42,41),(63,((56,(67,65)),((43,46),(53,(60,(51,(40,(61,6))))))))),((50,(66,(3,47))),(4,(49,(44,((59,5),(55,((54,45),(64,39)))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,((69,48),(38,(1,(36,(37,((71,72),((70,(68,(((31,(28,(29,(30,(32,(26,27)))))),((((35,22),(20,(21,(25,(23,24))))),((16,15),(17,(19,18)))),(33,34))),(8,(12,(14,13)))))),(73,(62,(57,((52,58),(((42,41),((63,(56,(67,65))),(((51,(40,(6,61))),(60,53)),(43,46)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((45,54),(64,39)))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,(((2,7),(48,(69,(38,(1,(36,(37,((71,72),((70,(68,((31,(8,(13,(12,14)))),((28,(30,((29,32),(27,26)))),((34,33),(35,(((15,16),(17,(18,19))),(22,(20,(25,(21,(24,23)))))))))))),(73,(62,(57,((58,52),(((41,42),((63,(56,(65,67))),(((46,43),((61,51),(40,6))),(60,53)))),((50,(66,(47,3))),(4,(49,(44,((59,5),(55,((54,45),(39,64)))))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,(38,(1,(36,(37,(71,(72,((70,(68,(((31,(28,(29,(30,(26,(32,27)))))),((35,(((16,15),(17,(19,18))),(22,((25,(20,21)),(23,24))))),(33,34))),(8,(12,(14,13)))))),(73,(62,(57,((52,58),(((42,41),((56,((43,46),(53,(60,(51,(40,(6,61))))))),(63,(67,65)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((54,45),(64,39)))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((2,(7,((69,48),(38,(1,(36,(37,((72,71),((70,(68,(((31,(28,(30,(29,(26,(32,27)))))),((35,(((16,15),(17,(19,18))),(22,((25,(23,24)),(20,21))))),(33,34))),(8,(12,(14,13)))))),(73,(62,(57,((52,58),(((42,41),(63,((56,(67,65)),((43,46),(53,(60,(51,(40,(6,61))))))))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(64,39))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,(((7,2),(48,(69,(38,(1,(36,(37,((72,71),((70,(68,((31,(8,(12,(14,13)))),((28,(30,((32,29),(27,26)))),((35,(((16,15),(17,(19,18))),(22,((25,(21,20)),(23,24))))),(33,34)))))),(73,(62,(57,((52,58),(((42,41),((63,(56,(67,65))),((43,46),((60,53),(51,(40,(6,61))))))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(64,39))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,(((7,2),(69,(48,(38,(1,(36,(37,(71,(72,((70,(68,((31,(8,(13,(14,12)))),((28,(29,(30,(32,(26,27))))),((35,(((16,15),(17,(19,18))),(22,((25,(21,20)),(23,24))))),(33,34)))))),(73,(62,(57,((52,58),(((42,41),((63,(65,67)),(56,((43,46),(53,(60,(51,(40,(6,61))))))))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(64,39)))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,(((7,2),(48,(69,(38,(1,(36,(37,((71,72),((70,(68,((31,(((33,34),(35,((22,(20,(25,(21,(23,24))))),((16,15),(17,(19,18)))))),(28,(30,(29,(26,(32,27))))))),(8,(12,(13,14)))))),(73,(62,(57,((52,58),(((42,41),(63,((56,(((60,53),(51,(40,(6,61)))),(43,46))),(67,65)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(64,39))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(69,(48,((1,38),(36,(37,(71,(72,((70,(68,((31,((28,(30,(29,(27,(32,26))))),((35,((22,(20,((21,25),(23,24)))),((16,15),(17,(19,18))))),(33,34)))),(8,(13,(14,12)))))),(73,(62,(57,((52,58),(((42,41),(63,((56,(67,65)),(((53,60),(51,(40,(6,61)))),(43,46))))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((45,54),(64,39))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((2,(7,((69,48),(38,(1,(36,(37,((71,72),((70,(68,(((31,(28,(29,(30,(27,(32,26)))))),((35,(((15,16),(17,(18,19))),(22,(20,((25,21),(24,23)))))),(34,33))),(8,(13,(12,14)))))),(73,(62,(57,((58,52),(((42,41),(63,((56,(65,67)),((53,(60,(51,(40,(61,6))))),(46,43))))),((50,(66,(47,3))),(4,(49,(44,((55,((54,45),(39,64))),(59,5)))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,(1,(38,(36,(37,(71,(72,((70,(68,((8,(12,(13,14))),(((33,34),(35,((22,(20,((21,25),(23,24)))),((16,15),(17,(19,18)))))),(31,(28,(29,(30,(26,(32,27)))))))))),(73,(62,(57,((52,58),(((42,41),((63,(56,(65,67))),((43,46),(53,(60,(51,(40,(6,61)))))))),((50,(66,(3,47))),(4,(49,(44,((55,((45,54),(64,39))),(5,59)))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,((1,38),(36,(37,((72,71),((70,(68,((31,((28,((30,29),(32,(27,26)))),((35,(((17,(18,19)),(15,16)),(22,((20,21),(25,(24,23)))))),(34,33)))),(8,(12,(14,13)))))),(73,(62,(57,((((41,42),(63,((67,65),(56,((53,(60,(51,(40,(61,6))))),(46,43)))))),((50,(66,(47,3))),(4,(49,(44,((59,5),(55,(54,(45,(39,64)))))))))),(58,52)))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,(69,(48,(38,(1,(36,(37,(71,(72,((70,(68,((31,(8,(13,(12,14)))),((28,(30,(32,(29,(26,27))))),((35,((22,((25,(21,20)),(24,23))),((15,16),(17,(18,19))))),(34,33)))))),(73,(62,(57,((58,52),(((41,42),((63,(56,(65,67))),(((51,(40,(61,6))),(46,43)),(53,60)))),((50,(66,(47,3))),(4,(49,(44,((55,((54,45),(39,64))),(59,5)))))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((2,(7,((48,69),(38,(1,(36,(37,(71,(72,((70,(68,(((31,(28,((29,30),(32,(26,27))))),((35,(((17,(19,18)),(16,15)),(22,(20,(21,(25,(23,24))))))),(33,34))),(8,(13,(14,12)))))),(73,(62,(57,((52,58),(((42,41),((63,(56,(67,65))),(((43,46),(51,(40,(6,61)))),(60,53)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((45,54),(64,39))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((2,(7,(69,(48,(38,(1,(36,(37,(71,(72,((70,(68,(((31,(28,((30,29),(27,(26,32))))),((35,(((16,15),(17,(19,18))),(22,(20,(21,(25,(23,24))))))),(33,34))),(8,(13,(14,12)))))),(73,(62,(57,((52,58),(((42,41),(63,((56,((53,(60,(51,(40,(6,61))))),(43,46))),(67,65)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((54,45),(64,39)))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(69,(48,(1,(38,(36,(37,(71,(72,((70,(68,((31,((28,((30,29),(32,(26,27)))),((35,(((16,15),(17,(19,18))),(22,(20,(25,(21,(23,24))))))),(33,34)))),(8,(13,(12,14)))))),(73,(62,(57,((52,58),(((42,41),(63,((56,(((60,53),(51,(40,(6,61)))),(43,46))),(67,65)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(64,39))))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,(((2,7),((48,69),(38,(1,(36,(37,((71,72),((70,(68,((31,((28,(30,((32,29),(26,27)))),((35,(((16,15),(17,(19,18))),(22,((25,(21,20)),(23,24))))),(33,34)))),(8,(13,(14,12)))))),(73,(62,(57,((52,58),(((41,42),(63,((67,65),((43,46),((53,60),(51,(56,(40,(6,61))))))))),((50,(66,(3,47))),(4,(49,(44,((55,(45,(54,(64,39)))),(5,59))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((2,(7,(48,(69,(38,(1,(36,(37,(71,(72,((70,(68,(((31,(28,(29,(30,(26,(32,27)))))),((35,(((16,15),(17,(19,18))),(22,(20,(25,(21,(23,24))))))),(34,33))),(8,(13,(14,12)))))),(73,(62,(57,((58,52),(((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((45,54),(64,39)))))))),((42,41),((63,(56,(67,65))),(((51,(40,(6,61))),(60,53)),(43,46)))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,((38,1),(36,(37,(((70,(68,((31,((28,(30,((32,29),(27,26)))),((35,(((17,(18,19)),(15,16)),(22,(20,(21,(25,(24,23))))))),(34,33)))),(8,(13,(12,14)))))),(73,(62,(57,((58,52),(((41,42),((63,(56,(65,67))),((53,(60,(51,(40,(61,6))))),(46,43)))),((50,(66,(47,3))),(4,(49,(44,((59,5),(55,(45,(54,(39,64))))))))))))))),(72,71))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,((1,38),(36,(37,(71,(72,((70,(68,((31,((28,(30,(29,(32,(27,26))))),((33,34),(35,(((16,15),(17,(19,18))),(22,((20,21),(25,(23,24))))))))),(8,(12,(14,13)))))),(73,(62,(57,((58,52),(((42,41),(63,((56,(((60,53),(51,(40,(6,61)))),(43,46))),(67,65)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,(45,(54,(39,64)))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,(((7,2),(48,(69,(38,(1,(36,(37,(71,(72,((70,(68,((((33,34),(35,((22,((25,(23,24)),(20,21))),((16,15),(17,(19,18)))))),(31,(28,((29,30),(32,(27,26)))))),(8,(12,(14,13)))))),(73,(62,(57,((52,58),(((42,41),(63,((65,((43,46),(53,(60,(51,(40,(6,61))))))),(56,67)))),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((54,45),(64,39))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(69,(48,(38,(1,(36,(37,(71,(72,((70,(68,(((31,(28,(29,(30,(32,(26,27)))))),((34,33),(35,(((15,16),(17,(18,19))),(22,((25,(20,21)),(24,23))))))),(8,(13,(12,14)))))),(73,(62,(57,((52,58),(((41,42),((63,(65,67)),(56,((46,43),((60,53),(51,(40,(61,6)))))))),((50,(66,(47,3))),(4,(49,(44,((59,5),(55,(54,(45,(39,64))))))))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,(69,(48,(38,(1,(36,(37,(71,(72,((70,(68,((31,((28,((30,29),(27,(26,32)))),(((22,(35,(20,(21,(25,(23,24)))))),((17,(19,18)),(16,15))),(33,34)))),(8,(13,(14,12)))))),(73,(62,(57,((52,58),(((42,41),(63,((56,(67,65)),((43,46),(53,(60,(51,(40,(6,61))))))))),((50,(66,(3,47))),(4,(49,(44,((55,(54,(45,(64,39)))),(5,59)))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,(1,(38,(36,(37,(71,(72,((70,(68,(((31,(28,(30,(32,(29,(27,26)))))),((35,((22,(20,((21,25),(24,23)))),((15,16),(17,(18,19))))),(34,33))),(8,(12,(13,14)))))),(73,(62,(57,((58,52),(((41,42),((63,(56,(65,67))),((53,(60,(51,(40,(61,6))))),(46,43)))),((50,(66,(47,3))),(4,(49,(44,((55,((45,54),(39,64))),(59,5)))))))))))))))))))))),(11,10)));
	TREE * UNTITLED = [&R] (9,((7,(2,(69,(48,(1,(38,(36,(37,(71,(72,((70,(68,((31,(((34,33),(35,((22,((25,(23,24)),(21,20))),((16,15),(17,(19,18)))))),(28,(30,(29,(26,(32,27))))))),(8,(12,(14,13)))))),(73,(62,(57,((52,58),(((63,(((43,46),((51,(40,(6,61))),(60,53))),(56,(65,67)))),(42,41)),((50,(66,(3,47))),(4,(49,(44,((5,59),(55,((45,54),(64,39)))))))))))))))))))))))),(10,11)));
	TREE * UNTITLED = [&R] (9,((7,(2,(48,(69,(38,(1,(36,(37,(71,(72,((70,(68,((31,((28,((32,(26,27)),(29,30))),((35,(((16,15),(17,(19,18))),(22,(20,(25,(21,(23,24))))))),(33,34)))),(8,(13,(14,12)))))),(73,(62,(57,((52,58),(((42,41),(63,((67,65),(56,((43,46),(53,(60,(51,(40,(6,61)))))))))),((4,(49,(44,((59,5),(55,(54,(45,(64,39)))))))),(50,(66,(3,47)))))))))))))))))))),(10,11)));
END;
