#NEXUS
[R-package APE, Tue Oct 01 21:02:22 2019]

BEGIN TAXA;
	DIMENSIONS NTAX = 51;
	TAXLABELS
		Yilingia_spiciformis
		Namacalathus
		Novocrania
		Lingula
		Pelagodiscus_atlanticus
		Terebratulina
		Phoronis
		Sipunculus
		Loxosomella
		Flustra
		Amathia
		Canadia_spinosa
		Serpula
		Capitella
		Wirenia
		Chaetoderma
		Acaenoplax_hayae
		Kulindroplax_perissokomos
		Phthipodochiton_thraivensis
		Calvapilosa_kroegeri
		Glaphurochiton_carbonarius
		Polysacos_vickersianum
		Mopalia
		Tonicella
		Leptochiton
		Neopilina
		Conocardium_elongatum
		Dentalium
		Pojetaia_runnegari
		Mytilus
		Pelagiella
		Haliotis
		Odontogriphus_omalus
		Wiwaxia_corrugata
		Siphogonuchites_multa
		Orthrozanclus
		Halkieria_evangelista
		Dailyatia
		Micromitra
		Eccentrotheca
		Gasconsia
		Heliomedusa_orienta
		Lingulellotreta_malongensis
		Micrina
		Mickwitzia_muralensis
		Orthis
		Paterimitra
		Yuganotheca_elegans
		Cotyledion_tylodes
		Haplophrentis_carinatus
		Pedunculotheca_diania
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Yilingia_spiciformis,
		2	Namacalathus,
		3	Novocrania,
		4	Lingula,
		5	Pelagodiscus_atlanticus,
		6	Terebratulina,
		7	Phoronis,
		8	Sipunculus,
		9	Loxosomella,
		10	Flustra,
		11	Amathia,
		12	Canadia_spinosa,
		13	Serpula,
		14	Capitella,
		15	Wirenia,
		16	Chaetoderma,
		17	Acaenoplax_hayae,
		18	Kulindroplax_perissokomos,
		19	Phthipodochiton_thraivensis,
		20	Calvapilosa_kroegeri,
		21	Glaphurochiton_carbonarius,
		22	Polysacos_vickersianum,
		23	Mopalia,
		24	Tonicella,
		25	Leptochiton,
		26	Neopilina,
		27	Conocardium_elongatum,
		28	Dentalium,
		29	Pojetaia_runnegari,
		30	Mytilus,
		31	Pelagiella,
		32	Haliotis,
		33	Odontogriphus_omalus,
		34	Wiwaxia_corrugata,
		35	Siphogonuchites_multa,
		36	Orthrozanclus,
		37	Halkieria_evangelista,
		38	Dailyatia,
		39	Micromitra,
		40	Eccentrotheca,
		41	Gasconsia,
		42	Heliomedusa_orienta,
		43	Lingulellotreta_malongensis,
		44	Micrina,
		45	Mickwitzia_muralensis,
		46	Orthis,
		47	Paterimitra,
		48	Yuganotheca_elegans,
		49	Cotyledion_tylodes,
		50	Haplophrentis_carinatus,
		51	Pedunculotheca_diania
	;
	TREE * UNTITLED = [&R] (1,(((((38,(11,10)),(40,(7,(47,(44,((((39,41),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6))))))),(49,(9,2))),((37,36),(18,(17,((15,19),(16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),(21,((35,20),(25,(22,(24,23)))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((38,(((40,7),(47,(44,((((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50))))),(6,46))))),(10,11))),(49,(2,9))),((36,37),(18,(17,((16,(((31,((28,(30,29)),(32,(26,27)))),(34,33)),(21,((35,20),(25,(22,(23,24))))))),(15,19)))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((40,((7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6))))),(11,10))),(38,(49,(9,2)))),((37,36),(18,(17,((19,15),(16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),(21,((20,35),(25,(22,(24,23)))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,(((((38,(10,11)),((40,7),(47,(44,((((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50))))),(6,46)))))),(49,(2,9))),((36,37),(18,(17,((15,19),(16,(((31,((28,(29,30)),(32,(26,27)))),(34,33)),(21,((35,20),(25,(22,(23,24)))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((38,((40,(7,(47,(44,((((39,41),(3,42)),(45,(5,((43,(4,48)),(51,50))))),(6,46)))))),(10,11))),(49,(2,9))),((36,37),(18,(17,((15,19),(16,(((31,((32,(26,27)),(28,(29,30)))),(34,33)),(21,((35,20),(25,(22,(23,24)))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((8,(12,(13,14))),(((38,(49,(9,2))),((40,(7,(47,(44,((((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50))))),(6,46)))))),(10,11))),((37,36),(18,(17,((15,19),(16,(((31,((32,(27,26)),(28,(29,30)))),(34,33)),(21,((35,20),(25,(22,(23,24))))))))))))));
	TREE * UNTITLED = [&R] (1,(((40,((38,(49,(2,9))),((10,11),(7,(47,(44,((6,46),(((39,41),(42,3)),(45,(5,((43,(48,4)),(50,51)))))))))))),((36,37),(18,(17,((19,15),(16,((21,((20,35),(25,(22,(23,24))))),((31,((28,(29,30)),(32,(26,27)))),(34,33))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((38,(40,((7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6))))),(11,10)))),(49,(9,2))),((37,36),(18,(17,((19,15),(16,(((34,33),(31,((32,(27,26)),(28,(30,29))))),((21,(20,35)),(25,(22,(24,23))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,(((((40,(7,(47,(44,((((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50))))),(6,46)))))),(10,11)),(38,(49,(2,9)))),((36,37),(18,(17,((15,19),(16,(((31,((28,(30,29)),(32,(26,27)))),(34,33)),(21,((35,20),(25,(22,(23,24)))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((49,(38,(2,9))),((40,(7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(4,48)),(51,50))))),(6,46)))))),(10,11))),((36,37),(18,(17,((15,19),(16,(((31,((28,(29,30)),(32,(26,27)))),(34,33)),(21,((35,20),(25,(22,(23,24)))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,(((((40,(7,(47,(44,((((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50))))),(6,46)))))),(10,11)),(49,(38,(2,9)))),((37,36),(18,(17,((15,19),(16,(((31,((32,(27,26)),(28,(30,29)))),(34,33)),(21,((35,20),(25,(22,(23,24)))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((38,(49,(9,2))),((40,(7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6)))))),(11,10))),((37,36),(18,(17,((19,15),(16,(((31,((32,(27,26)),(28,(30,29)))),(33,34)),(21,((20,35),(25,(22,(24,23)))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,(((40,(((11,10),(7,(47,(44,((46,6),(((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51)))))))))),(49,(38,(9,2))))),((37,36),(18,(17,((19,15),(16,(((31,((32,(27,26)),(28,(30,29)))),(33,34)),((21,(20,35)),(25,(22,(24,23))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((49,(38,(9,2))),((40,(7,(47,(44,((((41,39),(42,3)),(45,(5,((50,51),(43,(4,48)))))),(46,6)))))),(11,10))),((37,36),(18,(17,((16,(((21,(20,35)),(25,(22,(24,23)))),((31,((28,(30,29)),(32,(27,26)))),(33,34)))),(19,15)))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,(((40,(((11,10),(7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6)))))),(49,(38,(9,2))))),((37,36),(18,(17,((19,15),(16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),((21,(20,35)),(25,(22,(24,23))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((8,(12,(14,13))),(((37,36),(18,(17,((19,15),(16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),(21,((20,35),(25,(22,(24,23))))))))))),((38,((40,(7,(47,(44,((46,6),(((41,39),(3,42)),(45,(5,((43,(4,48)),(50,51)))))))))),(11,10))),(49,(9,2))))));
	TREE * UNTITLED = [&R] (1,((((38,((10,11),((7,40),(47,(44,((6,46),(((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50))))))))))),(49,(2,9))),((36,37),(18,(17,((16,(((31,((32,(26,27)),(28,(29,30)))),(33,34)),(21,((35,20),(25,(22,(23,24))))))),(19,15)))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((40,((11,10),(7,(47,(44,((46,6),(((39,41),(3,42)),(45,(5,((43,(48,4)),(50,51))))))))))),(49,(38,(9,2)))),((37,36),(18,(17,((19,15),(16,(((31,((28,(29,30)),(32,(26,27)))),(33,34)),((21,(20,35)),(25,(22,(24,23))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,(((40,(((10,11),(7,(47,(44,((((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50))))),(6,46)))))),(49,(38,(2,9))))),((36,37),(18,(17,((15,19),(16,(((31,((28,(29,30)),(32,(26,27)))),(34,33)),((21,(35,20)),(25,(22,(23,24))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((38,((40,(7,(47,(44,(((45,(5,((43,(48,4)),(51,50)))),((39,41),(42,3))),(6,46)))))),(10,11))),(49,(2,9))),((36,37),(18,(17,((16,(((31,((32,(26,27)),(28,(29,30)))),(34,33)),((21,(35,20)),(25,(22,(24,23)))))),(15,19)))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((((7,40),(47,(44,((((41,39),(3,42)),(45,(5,((43,(4,48)),(50,51))))),(46,6))))),(11,10)),(38,(49,(9,2)))),((37,36),(18,(17,((16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),((21,(20,35)),(25,(22,(24,23)))))),(19,15)))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((38,(49,(9,2))),(40,((11,10),(7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(4,48)),(50,51))))),(46,6)))))))),((37,36),(18,(17,((19,15),(16,(((31,((32,(27,26)),(28,(30,29)))),(33,34)),(21,((20,35),(25,(22,(24,23)))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((49,(38,(2,9))),((40,(7,(47,(44,((((41,39),(42,3)),(45,(5,((43,(4,48)),(51,50))))),(6,46)))))),(10,11))),((36,37),(18,(17,((16,(((31,((28,(29,30)),(32,(26,27)))),(34,33)),(21,((35,20),(25,(22,(23,24))))))),(15,19)))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((((7,40),(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6))))),(11,10)),(38,(49,(2,9)))),((37,36),(18,(17,((15,19),(16,(((21,(20,35)),(25,(22,(24,23)))),((31,((28,(30,29)),(32,(27,26)))),(33,34))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((49,(38,(2,9))),((40,(7,(47,(44,((6,46),(((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50)))))))))),(10,11))),((36,37),(18,(17,((16,(((31,((28,(30,29)),(32,(26,27)))),(34,33)),((21,(35,20)),(25,(22,(23,24)))))),(15,19)))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((38,((40,(7,(47,(44,((((3,42),(39,41)),(45,(5,((43,(48,4)),(50,51))))),(46,6)))))),(11,10))),(49,(9,2))),((37,36),(18,(17,((16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),(21,((20,35),(25,(22,(24,23))))))),(15,19)))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((38,((40,(7,(47,(44,((46,6),(((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51)))))))))),(11,10))),(49,(9,2))),((37,36),(18,(17,((19,15),(16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),(21,((35,20),(25,(22,(24,23)))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((38,(49,(2,9))),((10,11),(40,(7,(47,(44,((6,46),(((39,41),(42,3)),(45,(5,((51,50),(43,(4,48))))))))))))),((36,37),(18,(17,((15,19),(16,(((31,((28,(29,30)),(32,(26,27)))),(34,33)),((21,(35,20)),(25,(22,(23,24))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,(((((38,(11,10)),((7,40),(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6)))))),(49,(9,2))),((37,36),(18,(17,((19,15),(16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),((21,(20,35)),(25,(22,(24,23))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((38,(((40,7),(47,(44,((((39,41),(42,3)),(45,(5,((43,(4,48)),(51,50))))),(6,46))))),(10,11))),(49,(2,9))),((37,36),(18,(17,((15,19),(16,(((31,((28,(29,30)),(32,(26,27)))),(34,33)),(21,((35,20),(25,(22,(23,24)))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((38,(40,((7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6))))),(11,10)))),(49,(9,2))),((37,36),(18,(17,((19,15),(16,(((31,((32,(27,26)),(28,(30,29)))),(33,34)),(21,((20,35),(25,(22,(24,23)))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((36,37),(18,(17,((19,15),(16,(((31,((32,(27,26)),(28,(30,29)))),(33,34)),(21,((20,35),(25,(22,(24,23))))))))))),((38,((40,(7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6)))))),(11,10))),(49,(9,2)))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,((((38,(49,(9,2))),(((40,7),(47,(44,((((39,41),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6))))),(11,10))),((37,36),(18,(17,((19,15),(16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),((21,(20,35)),(25,(22,(24,23))))))))))),(8,(12,(13,14)))));
	TREE * UNTITLED = [&R] (1,((((49,(38,(9,2))),(((40,7),(47,(44,((((39,41),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6))))),(11,10))),((37,36),(18,(17,((19,15),(16,(((33,34),(31,((28,(30,29)),(32,(27,26))))),(21,((35,20),(25,(22,(24,23)))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,(((40,((49,(38,(9,2))),((7,(47,(44,((((41,39),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6))))),(11,10)))),((37,36),(18,(17,((19,15),(16,(((31,((32,(27,26)),(28,(30,29)))),(33,34)),(21,((20,35),(25,(22,(24,23)))))))))))),(8,(12,(14,13)))));
	TREE * UNTITLED = [&R] (1,(((((40,(7,(47,(44,((((39,41),(3,42)),(45,(5,((43,(48,4)),(50,51))))),(46,6)))))),(11,10)),(38,(49,(9,2)))),((37,36),(18,(17,((16,(((31,((28,(30,29)),(32,(27,26)))),(33,34)),((21,(20,35)),(25,(22,(24,23)))))),(15,19)))))),(8,(12,(13,14)))));
END;
